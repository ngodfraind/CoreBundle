{% macro renderList(array) %}
    {% import _self as self %}
    <ul>
    {% for element in array %}
        {% if element is iterable %}
             {{ self.renderList(element) }}
        {% else %}
        <li> {{ element }} </li>
        {% endif %}
    {% endfor %}
    </ul>
{% endmacro %}


{% macro flashBox() %}
    {% import _self as self %}
    {% set flashBag = app.session.getFlashBag() %}
    {% if flashBag|length > 0 %}
        {% set flashes =
            {
                'info': flashBag.get('info'),
                'success': flashBag.get('success'),
                'warning': flashBag.get('warning'),
                'danger': flashBag.get('error'),
                'alert': flashBag.get('alert')
            }
        %}
        {% for category, msgs in flashes %}
            {% if msgs|length > 0 %}
                <div class="alert alert-{{ category }}">
                    <a class="close" data-dismiss="alert" href="#" aria-hidden="true">&times;</a>
                    {{ self.renderList(msgs) }}
                </div>
            {% endif %}
        {% endfor %}
    {% endif %}
{% endmacro %}

{% macro sectionHeader(text) %}
    <div class="row">
        <div class="col-md-12">
            <h2 class="section-header">{{ text }}</h2>
        </div>
    </div>
{% endmacro %}

{% macro breadcrumbs(elements) %}
    {% spaceless %}
    <ul class="breadcrumb">
        {% for element in elements %}
            <li{% if loop.last %} class="active"{% endif %}>
                {% if not loop.last %}
                    <a href="{{ element['href'] }}">{% if element['icon'] is defined %}<i class="{{ element['icon'] }}"></i> {% endif %}{{ element['name'] }}</a>
                {% else %}<span>{{ element['name'] }}</span>{% endif %}
            </li>
        {% endfor %}
    </ul>
    {% endspaceless %}
{% endmacro %}

{% macro desktopBreadcrumbs(elements) %}
    {% import _self as self %}

    {% set myDesktop = [{
            'icon': 'fa fa-home',
            'name': 'desktop'|trans({}, 'platform'),
            'href': path('claro_desktop_open')
        }]
    %}
    {% set finalElements = myDesktop|merge(elements) %}

    {{ self.breadcrumbs(finalElements) }}
{% endmacro %}

{% macro workspaceBreadcrumbs(workspace, elements) %}
    {% import _self as self %}

    {% if has_role('ROLE_ANONYMOUS') %}
        {% set workspaceElements =
            [
                {
                    'icon': 'fa fa-book',
                    'name': 'workspaces'|trans({}, 'platform'),
                    'href': path('claro_workspace_list')
                },
                {
                    'name': workspace.getName() ~ ' (' ~  workspace.getCode() ~ ') ',
                    'href': path('claro_workspace_open', {'workspaceId': workspace.getId(), 'toolName': 'home'})
                }
            ]
        %}
    {% else %}
        {% set workspaceElements =
            [
                {
                    'icon': 'fa fa-book',
                    'name': 'my_workspaces'|trans({}, 'platform'),
                    'href': path('claro_workspace_by_user')
                },
                {
                    'name': workspace.getName() ~ ' (' ~  workspace.getCode() ~ ') ',
                    'href': path('claro_workspace_open', {'workspaceId': workspace.getId(), 'toolName': 'home'})
                }
            ]
        %}
    {% endif %}
    {% set finalElements = workspaceElements|merge(elements) %}

    {{ self.breadcrumbs(finalElements) }}
{% endmacro %}

{% macro displayUser(user) %}
    {% if user %}
        {% if user.isEnabled %}
            <a href="{{path('claro_public_profile_view', {'publicUrl': user.getPublicUrl()})}}">
                {{ user.getUsername() }}
            </a>
        {% else %}
            <div>
                {{ 'user_removed'|trans({}, 'platform') }}
            </div>
        {% endif %}
    {% else %}
        claroline-connect
    {% endif %}
{% endmacro %}

{% macro maxResultsSelectBox(currentMax, onChangeHandler, label) %}
    <div class="input-group margin-bottom-md">
        <select class="form-control input-md" id="max-select" onchange="{{ onChangeHandler }}">
            <option{% if currentMax == 20 %} selected{% endif %}>20</option>
            <option{% if currentMax == 50 %} selected{% endif %}>50</option>
            <option{% if currentMax == 100 %} selected{% endif %}>100</option>
            <option{% if currentMax == 200 %} selected{% endif %}>200</option>
            <option{% if currentMax == 500 %} selected{% endif %}>500</option>
        </select>
        {% if label %}
            <span class="input-group-addon">{{ label|trans({}, 'platform') }}</span>
        {% else %}
            <span class="input-group-addon">{{ 'line_per_page'|trans({}, 'platform') }}</span>
        {% endif %}
    </div>
{% endmacro %}

{#
    I know this is dirty because I use the same structrure for installed package
    and soon to be installed but I'm very lazy.
    Feel free to split this method if you want.
#}
{% macro renderPackageElement(package, upgradablePackages, fetchNew, baseRequirementSatisfied) %}
    {% set displayUpgradePerms = false %}
    <div class="panel-group" id="accordion-{{ package.name }}">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h5 class="panel-title">
                    <a class="panel-toggle package-element"
                       data-toggle="collapse"
                       data-parent="#accordion-{{ package.name }}"
                       href="#collapse-inner-{{ package.name }}"
                       data-package-dist-reference="{{ package.name }}"
                    >
                        {% set version = package.version | replace({'v': ''})  %}
                        {{ package.name }}
                    </a>
                    {% if fetchNew == false and package.isConfigurable() %}
                        <a href="{{ path('claro_admin_plugin_parameters', {'pluginShortName': package.name}) }}">
                            <i class="fa fa-cog"></i>
                        </a>
                    {% endif %}
                    <span class="badge alert-info">{{ version }}</span>

                    <span class="pull-right">
                        {% if fetchNew == false %}
                            {% set found = false %}
                            {% set foundPkg = null %}
                            {% for upgradablePackage in upgradablePackages %}
                                {% if upgradablePackage.name == package.name %}
                                    {% set found = true %}
                                    {% set foundPkg = upgradablePackage %}
                                {% endif %}
                            {% endfor %}
                            {% if found == true %}
                                {% if version_compare(version, foundPkg.version, '<') and baseRequirementSatisfied %}
                                    {% if is_installation_requirement_satisfied(package.basePath) %}
                                        <a class="badge alert-warning install-pkg"
                                            data-package-name="{{ package.name }}"
                                            data-package-version="{{ foundPkg.version }}"
                                        >
                                            {{ 'update'|trans({'%version%': foundPkg.version}, 'platform') }}
                                        </a>
                                    {% else %}
                                        {% set displayUpgradePerms = true %}
                                        <span class="badge alert-danger">
                                            {{ 'requirement_failed_for_update'|trans({}, 'platform') }}
                                        </span>
                                    {% endif %}
                                {% endif %}
                                {% if version_compare(version, foundPkg.version, '=') %}
                                    <span class="badge alert-success">
                                        {{ 'up_to_date'|trans({}, 'platform') }}
                                    </span>
                                {% else %}
                                    <span class="badge alert-danger">
                                        {{ 'update_impossible'|trans({}, 'platform') }}
                                    </span>
                                {% endif %}
                            {% else %}
                                <span class="badge alert-danger">
                                    {{ 'not_managed_by_claroline_repository'|trans({}, 'platform') }}
                                </span>
                            {% endif %}
                        {% else %}
                            {% if baseRequirementSatisfied and is_installation_requirement_satisfied(package.basePath, package.requirements) %}
                                <a
                                    class="badge install-pkg"
                                    data-package-name="{{ package.name }}"
                                    data-package-version="{{ package.version }}"
                                >
                                    {{ 'install'|trans({}, 'platform') }}
                                </a>
                            {% else %}
                                <span class="badge alert-danger">
                                    {{ 'requirement_failed_for_install'|trans({}, 'platform') }}
                                </span>
                            {% endif %}
                        {% endif %}
                    </span>
                </h5>
            </div>
            <div id="collapse-inner-{{ package.name }}" class="panel panel-body collapse">
                {% if
                    not package.description
                    and not package.authors | length > 0
                    and not package.license
                %}
                    {{ 'no_package_description'|trans({}, 'platform') }}
                {% else %}
                    {% if package.description %}
                        <div>
                            {{ package.description }}
                        </div>
                    {% endif %}
                    {% if package.authors | length > 0 %}
                        <div>
                            <ul>
                            {% for author in package.authors %}
                                <li>
                                    {% if author.name is defined %}
                                        {{ author.name }}
                                    {% endif %}
                                    <ul>
                                        {% if author.email is defined %}
                                            <li>
                                                {{ author.email }}
                                            </li>
                                        {% endif %}
                                        {% if author.homepage is defined %}
                                            <li>
                                                <a href="{{ author.homepage }}">
                                                    {{ author.homepage }}
                                                </a>
                                            </li>
                                        {% endif %}
                                    </ul>
                                </li>
                            {% endfor %}
                            </ul>
                        </div>
                    {% endif %}
                    {% if package.license %}
                        <div>
                            {#{{ package.license }}#}
                        </div>
                    {% endif %}
                {% endif %}
                <hr>
                {% if fetchNew and not is_installation_requirement_satisfied(package.basePath, package.requirements) %}
                    {{ render_package_missing_permissions(package.basePath)|raw }}
                    {{ render_package_missing_require(package.requirements)|raw }}
                {% else %}
                    {% if displayUpgradePerms == true %}
                        {{ render_package_missing_permissions(package.basePath)|raw }}
                    {% endif %}
                {% endif %}
            </div>
        </div>
    </div>
{% endmacro %}
